{
    "PE PREGUNTA 01": ["PRIMERA PREGUNTA: ¿Cual es el objetivo principal del pensamiento computacional?",
                       "a) Resolver problemas utilizando algoritmos y abstraccion. b) Programar robots y sistemas autonomos. c) Diseñar hardware de computadoras."],
    "PE PREGUNTA 02": ["SEGUNDA PREGUNTA: 2. El primer paso del pensamiento computacional es: identificar el problema.",
                       "¿VERDADERO? o ¿FALSO?"],
    "PE PREGUNTA 03": ["TERCERA PREGUNTA: ¿Qué es un algoritmo en terminos de pensamiento computacional?",
                       "1) Un patron de diseño visual 2) Un lenguaje de programacion 3) Una secuencia de pasos para resolver un problema 4) Una representacion grafica de datos"],

    "bienvenida": ["Hola. Soy tu Asistente Virtual. Fui creada para instruirte todo respecto al hermoso mundo de la computación. Antes de empezar ¿Podrias decirme tu nombre?"],

    "definicion": ["La programación es el proceso de crear un conjunto detallado de instrucciones y algoritmos que guían a una computadora para realizar acciones específicas y solucionar problemas. Es decir, le indicamos a la máquina cómo ejecutar pasos en un orden determinado para lograr un objetivo."],
    "importancia": ["En la era digital actual, aprender las bases de la programación es absolutamente esencial por varias razones importantes:"],

    "razones": [
        "Nos permite automatizar tareas manuales repetitivas y propensas a errores humanos, optimizando tiempo y recursos.", 
        "Nos capacita para resolver problemas complejos de todo tipo, desde calcular trayectorias de cohetes hasta predecir el clima.",
        "Nos habilita a desarrollar aplicaciones web y móviles innovadoras que mejoren la vida de millones de personas.",
        "Nos da el poder de crear videojuegos, animaciones, efectos visuales y experiencias interactivas gracias a la programación gráfica.",
        "Nos ayuda a proteger información confidencial y mejorar la seguridad informática en general.",
        "Nos permite recolectar y analizar grandes volúmenes de datos para obtener ideas valiosas y predecir tendencias.",
        "En resumen, dominar conceptos de programación en la era digital es tan importante como saber leer y escribir."
    ],

    "variables": "Las variables son contenedores que almacenan datos que pueden modificarse durante la ejecución de un programa. Se definen con un nombre descriptivo y un tipo de datos asociado como texto, número, booleano, etc. Sirven para guardar valores que se utilizarán en distintas partes del código.",
    
    "constantes": "Las constantes también almacenan valores, pero que mantienen un valor fijo que no cambia. Se suelen definir con nombres en mayúsculas por convención. Algunos ejemplos son PI=3.14 o GRUPO_EDAD=20-35. Sirven para representar valores fijos que no variarán.",
    
    "tipos_de_datos": "Los tipos de datos definen el tipo de valor que puede almacenar una variable o constante. Los tipos primarios más comunes en todos los lenguajes son: Números enteros y decimales para operaciones matemáticas, Cadenas de texto para alfanuméricos, Booleanos para verdadero/falso, Arrays y objetos para estructuras complejas.",
    
    "operadores": "Los operadores permiten realizar acciones sobre variables y valores, como asignación (=), matemáticos (+, -, *, /), comparación (>, <, ==), lógicos (and, or, not) entre muchos otros. Permiten construir expresiones complejas.",
    
    "estructuras_condicionales": "Las estructuras condicionales permiten bifurcación en el programa dependiendo de si una expresión lógica es cierta o falsa. Los principales son el if y else para ejecutar código si se cumple o no una condición. También switch (comparación) y try/catch para manejo de errores.",
    
    "bucles": "Los bucles permiten ejecutar repetidamente un bloque de código mientras se cumpla una condición. Los principales son for, mientras se cumpla un contador, y while, mientras se cumpla una expresión lógica. Se utilizan para iteraciones, leer arrays, lectura de archivos, iteraciones infinitas y más.",

    
    "Funciones": "Bloques de código identificados con un nombre que se pueden reutilizar fácilmente.",
    "POO": "paradigma basado en objetos que emulan entidades reales con propiedades y métodos.",
    "Compiladores": "traducen lenguajes al código máquina entendible por los computadores.",
    "Depuración": "técnicas para identificar errores, bugs y fallos lógicos en el código.",
    "Algoritmos": "automatizan y resuelven problemas complejos de manera genérica y escalable.",
    "Estructuras de datos": "arrays, listas, pilas, colas, hash tables para organizar datos."

}





